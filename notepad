
===========================================ALMOST ANSWER==============================================================================
for(int i = 0; i!= 10; i++){
            
    //
    dout.write("REDY\n".getBytes());
    dout.flush();
    //
    
    //
    jobStrings = str.split(" ");
    System.out.println("==================AFTER HANDSHAKE=========================");
    String Gets= "GETS Capable " + jobStrings[4] + " " + jobStrings[5] +  " " + jobStrings[6] + "\n";
    System.out.println(Gets);

    dout.write("OK\n".getBytes());
    dout.flush();
    str=in.readLine();
    
    dout.write(Gets.getBytes());
    dout.flush();
    str=in.readLine();
    System.out.println("SERVER MSG = " + str);
    nRecStrings = str.split(" ");
    nRecs = Integer.parseInt(nRecStrings[2]);//test

        for(int j = 0; j!=nRecs; j++){
            dout.write("OK\n".getBytes());
            dout.flush();
            str=in.readLine();
            System.out.println("SERVER name = " + str);
            if(str.length() > 1){
                serverStrings = str.split(" ");
                //System.out.println("original Server = " + str);
                //System.out.println("serverStrings = " + serverStrings[0] + " || " + serverStrings[4]);
                if(Integer.parseInt(serverStrings[4]) > Core){
                    Name = serverStrings[0];
                    totalServer= Integer.parseInt(serverStrings[1]);
                    }
                } 
                if(str.isEmpty()){
                    break;
                }
            }
             
    if(jobStrings[0].equals("JOBN")){
        if(serverID > totalServer){
            serverID = 0;
        }
        //if JOBN then schedule the job 
        String schdCommand = "SCHD " + Integer.toString(jobID) + " " + Name + " " + Integer.toString(serverID) + "\n";
        serverID++;
        jobID++;
        System.out.println(schdCommand);
        
        dout.write(schdCommand.getBytes());
        dout.flush();
        str=in.readLine();
        System.out.println("SERVER MSG = " + str);

        dout.write("REDY\n".getBytes());
    dout.flush();
    str=in.readLine();
    }
}


====================================================================================================================================
        //record all the job 
        dout.write("REDY\n".getBytes());
        dout.flush();
        str=in.readLine();
        System.out.println("SERVER MSG = "+ str);
        jobArray.add(str);

    //test schedule 
        dout.write("SCHD 0 medium 0\n".getBytes());
        dout.flush();
        str = in.readLine();
        System.out.println("SERVER MSG = "+ str);

        dout.write("REDY\n".getBytes());
        dout.flush();
        str=in.readLine();
        System.out.println("SERVER MSG = "+ str);
        jobArray.add(str);
        
       //SCHEDULING GOES HERE
    dout.write("GETS All\n".getBytes());
    dout.flush();
    str=in.readLine();
    System.out.println("SERVER MSG => " + str);

    
    while(true){
    dout.write("OK\n".getBytes());
    dout.flush();
    str=in.readLine();
    System.out.println("SERVER MSG = " + str);
    if(str.length() > 1){
        serverArray.add(str);
        }
     
        if(str.isEmpty()){
            break;
        }
    } 
    //write here to schedule job 